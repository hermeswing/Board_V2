<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- properties -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/conf/conf.properties</value>
			</list>
		</property>
	</bean>

	<!-- auto scan bean -->
	<context:component-scan base-package="kr.nerv.antop" />

	<!-- scheduling -->
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	<task:executor id="executor" keep-alive="60" pool-size="1" queue-capacity="2"
		rejection-policy="ABORT" />
	<task:scheduler id="scheduler" pool-size="1" />

	<!-- aop -->
	<aop:aspectj-autoproxy />

	<!-- mybatis mapper scanner -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="kr.nerv.antop.entity.mapper" />

	<!-- google kaptcha -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.textproducer.char.string">${kaptcha.textproducer.char.string}</prop>
						<prop key="kaptcha.border">${kaptcha.border}</prop>
						<prop key="kaptcha.textproducer.font.color">${kaptcha.textproducer.font.color}</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:maxUploadSize="-1" />

	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/jsp/" p:suffix=".jsp" p:order="1">
	</bean>

</beans>
